{
	"info": {
		"_postman_id": "773e689e-f16e-4734-9a6e-db687e5c2af3",
		"name": "ffc-airsync",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register Org",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "875780e1-167b-48d5-836f-35e3618c51da",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"Response have token\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"token\");",
							"    ",
							"    //set token to global variable for later use",
							"    var orgRes = pm.response.json();",
							"    pm.globals.set(\"org_token\", orgRes.token)",
							"    ",
							"});",
							"",
							"pm.test(\"Response have id\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"    ",
							"    //set token to global variable for later use",
							"    var orgRes = pm.response.json();",
							"    pm.globals.set(\"org_id\", orgRes.id)",
							"    ",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"pcuCode\":\"145\",\n  \"name\": \"เนคเทค\",\n  \"uuid\": \"151b9\"\n}"
				},
				"url": {
					"raw": "{{url}}/org",
					"host": [
						"{{url}}"
					],
					"path": [
						"org"
					]
				}
			},
			"response": [
				{
					"id": "780d90c7-3dab-4a10-82ea-6a991eccf8d7",
					"name": "Register Org",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pcuCode\":\"145\",\n  \"name\": \"เนคเทค\",\n  \"uuid\": \"151b9\"\n}"
						},
						"url": {
							"raw": "{{url}}/org",
							"host": [
								"{{url}}"
							],
							"path": [
								"org"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"code\": \"145\",\n    \"name\": \"เนคเทค\",\n    \"uuid\": \"15169\",\n    \"token\": \"2314abc\",\n    \"id\": \"1\"\n}"
				}
			]
		},
		{
			"name": "Register User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4e552b2c-0a24-442c-aa2a-fbc9931bf663",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{org_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n  \"username\":\"admin0\",\n  \"password\": \"1234admin0\"\n},{\n\t\"username\":\"admin1\",\n  \"password\": \"1234admin1\"\n}\n]"
				},
				"url": {
					"raw": "{{url}}/org/{{org_id}}/user",
					"host": [
						"{{url}}"
					],
					"path": [
						"org",
						"{{org_id}}",
						"user"
					]
				}
			},
			"response": [
				{
					"id": "49d23d48-9368-4d64-8795-709e1682552a",
					"name": "Register User",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\n  \"username\":\"admin0\",\n  \"password\": \"1234admin0\"\n},{\n\t\"username\":\"admin1\",\n  \"password\": \"1234admin1\"\n}\n]"
						},
						"url": {
							"raw": "{{url}}/org/1/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"org",
								"1",
								"user"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "",
							"name": "Access-Control-Allow-Credentials",
							"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "",
							"name": "Access-Control-Allow-Headers",
							"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "",
							"name": "Access-Control-Allow-Methods",
							"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*",
							"name": "Access-Control-Allow-Origin",
							"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "",
							"name": "Access-Control-Expose-Headers",
							"description": "Lets a server whitelist headers that browsers are allowed to access."
						},
						{
							"key": "Connection",
							"value": "keep-alive",
							"name": "Connection",
							"description": "Options that are desired for the connection"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip",
							"name": "Content-Encoding",
							"description": "The type of encoding used on the data."
						},
						{
							"key": "Content-Length",
							"value": "159",
							"name": "Content-Length",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Mon, 19 Mar 2018 10:01:07 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "ETag",
							"value": "W/\"b1-t6MXwpDE+IBswaWGyMe2Qg\"",
							"name": "ETag",
							"description": "An identifier for a specific version of a resource, often a message digest"
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Find my Org",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "618556fb-a7db-4e0c-9288-7d116feadba3",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Reponse is organization in global variable\", function () {",
							"    var jsonData = pm.response.json();",
							"    var orgId = pm.globals.get(\"org_id\");",
							"    pm.expect(jsonData[0].id).to.eql(orgId);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url}}/org?my=true",
					"host": [
						"{{url}}"
					],
					"path": [
						"org"
					],
					"query": [
						{
							"key": "my",
							"value": "true"
						}
					]
				}
			},
			"response": [
				{
					"id": "03d378f8-9f34-4547-b2b6-873c0029457e",
					"name": "Find my Org",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/org?my=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"org"
							],
							"query": [
								{
									"key": "my",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "",
							"name": "Access-Control-Allow-Credentials",
							"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "",
							"name": "Access-Control-Allow-Headers",
							"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "",
							"name": "Access-Control-Allow-Methods",
							"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*",
							"name": "Access-Control-Allow-Origin",
							"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "",
							"name": "Access-Control-Expose-Headers",
							"description": "Lets a server whitelist headers that browsers are allowed to access."
						},
						{
							"key": "Connection",
							"value": "keep-alive",
							"name": "Connection",
							"description": "Options that are desired for the connection"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip",
							"name": "Content-Encoding",
							"description": "The type of encoding used on the data."
						},
						{
							"key": "Content-Length",
							"value": "153",
							"name": "Content-Length",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Tue, 20 Mar 2018 04:28:58 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "ETag",
							"value": "W/\"aa-kumJZhwOSO2WTj+KJgW7gg\"",
							"name": "ETag",
							"description": "An identifier for a specific version of a resource, often a message digest"
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"code\": \"145\",\n        \"name\": \"เนคเทค\",\n        \"uuid\": \"15169\",\n        \"id\": \"1\"\n    }\n]"
				}
			]
		},
		{
			"name": "Mobile Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f06a6109-94f6-4130-b999-63615fcb5d54",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"Response have mobile token\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"token\");",
							"    ",
							"    //set token to global variable for later use",
							"    var orgRes = pm.response.json();",
							"    pm.globals.set(\"mobile_token\", orgRes.token)",
							"    ",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "",
							"type": "string"
						},
						{
							"key": "username",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW4wOjEyMzRhZG1pbjA="
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/org/{{org_id}}/authorize",
					"host": [
						"{{url}}"
					],
					"path": [
						"org",
						"{{org_id}}",
						"authorize"
					]
				}
			},
			"response": [
				{
					"id": "176d1560-f785-483d-aef8-72a806cf3391",
					"name": "Login not success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW4wOjEyMzQ=",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/org/{{org_id}}/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"org",
								"{{org_id}}",
								"authorize"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"id": "330b11d8-9975-4286-9532-32aa011d0adf",
					"name": "Login success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"warning": ""
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW4wOjEyMzRhZG1pbjA=",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/org/15169/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"org",
								"15169",
								"authorize"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "",
							"name": "Access-Control-Allow-Credentials",
							"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "",
							"name": "Access-Control-Allow-Headers",
							"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "",
							"name": "Access-Control-Allow-Methods",
							"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*",
							"name": "Access-Control-Allow-Origin",
							"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "",
							"name": "Access-Control-Expose-Headers",
							"description": "Lets a server whitelist headers that browsers are allowed to access."
						},
						{
							"key": "Connection",
							"value": "keep-alive",
							"name": "Connection",
							"description": "Options that are desired for the connection"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip",
							"name": "Content-Encoding",
							"description": "The type of encoding used on the data."
						},
						{
							"key": "Content-Length",
							"value": "162",
							"name": "Content-Length",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Tue, 20 Mar 2018 04:18:00 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "ETag",
							"value": "W/\"b6-oUGEoKt9RUUxcv8TyyY7wA\"",
							"name": "ETag",
							"description": "An identifier for a specific version of a resource, often a message digest"
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						}
					],
					"cookie": [],
					"body": "{\n\t\"token\": \"123abcdef\"\n}"
				}
			]
		}
	]
}